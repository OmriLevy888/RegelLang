// x may be passed in by any way, but may no be changed
func print(i32 x) {
  println(x);
}

// x may be passed in either by value of by non-const reference
func print(&i32 x) {
  println(x);
}

func print(string x) {
  println(x);
}

func main([]string args, envp) => i32 {
  // passing rvalue objects
  println(1);  // copied, passed by value as const (value type)
  println("hello world");  // passed by const reference (reference type)

  // passing lvalue objects
  let a : i32 = 1;
  let b : string = "hello world";
  println(a);  // copied (value type)
  println(b);  // passed by const reference (reference type)

  // mutable passing
  println(&a);  // passed by lvalue reference (value type)
  println(&b);  // passed by lvalue reference (reference type)

  // moving ownership
  println(:a);  // pass by rvalue reference, move (value type)
  println(:b);  // pass by rvalue reference, move (reference type)
}
